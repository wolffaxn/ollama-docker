services:
  reverse-proxy:
    image: docker.io/traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
#      - --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=Europe/Berlin
    networks:
      - ollama-net

  ollama:
    container_name: ollama
    image: docker.io/ollama/ollama:0.3.6
    restart: unless-stopped
    ports:
      - 7869:11434
    volumes:
      - ./data/ollama:/root/.ollama
    tty: true
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    networks:
      - ollama-net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=ollama-net"

      - "traefik.http.routers.ollama.rule=Host(`ollama.localhost`)"
      - "traefik.http.routers.ollama.entrypoints=web"
      - "traefik.http.routers.ollama.service=ollama"
      - "traefik.http.services.ollama.loadbalancer.server.port=11434"

  ollama-web:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ollama-web
    restart: unless-stopped
    depends_on:
      - ollama
    ports:
      - 8081:8080
    volumes:
      - ./data/ollama-web:/app/backend/data
    environment:
      - OLLAMA_BASE_URLS=http://host.docker.internal:7869
      - ENV=dev
      - WEBUI_AUTH=false
      - WEBUI_NAME=ollama-web
      - WEBUI_URL=http://localhost:8081
      - WEBUI_SECRET_KEY=secret
    networks:
      - ollama-net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=ollama-net"

      - "traefik.http.routers.ollama-web.rule=Host(`ollama-web.localhost`)"
      - "traefik.http.routers.ollama-web.entrypoints=web"
      - "traefik.http.routers.ollama-web.service=ollama-web"
      - "traefik.http.services.ollama-web.loadbalancer.server.port=8080"

  # pipelines:
  #   image: ghcr.io/open-webui/pipelines:main
  #   container_name: pipelines
  #   restart: unless-stopped
  #   command:
  #   ports:
  #     - 9099:9099
  #   volumes:
  #     - ./data/pipelines:/app/pipelines
  #   networks:
  #     - ollama-net
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=ollama-net"

  #     - "traefik.http.routers.pipelines.rule=Host(`pipelines.localhost`)"
  #     - "traefik.http.routers.pipelines.entrypoints=web"
  #     - "traefik.http.routers.pipelines.service=pipelines"
  #     - "traefik.http.services.pipelines.loadbalancer.server.port=9099"

  qdrant:
    image: docker.io/qdrant/qdrant:v1.11.0
    container_name: qdrant
    restart: unless-stopped
    command:
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - ./data/qdrant:/qdrant/storage:z
    networks:
      - ollama-net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=ollama-net"

      - "traefik.http.routers.qdrant.rule=Host(`qdrant.localhost`)"
      - "traefik.http.routers.qdrant.entrypoints=web"
      - "traefik.http.routers.qdrant.service=qdrant"
      - "traefik.http.services.qdrant.loadbalancer.server.port=6333"

networks:
  ollama-net:
    external: true
